/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 scene.gltf -t 
Author: DKDTheGreat1 (https://sketchfab.com/DKDTheGreat1)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/kids-bed-b9ac989e61024b2a8959959ac51d149d
Title: Kids Bed
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
    Object_7: THREE.Mesh;
    Object_9: THREE.Mesh;
    Object_11: THREE.Mesh;
  };
  materials: {
    BedFrame: THREE.MeshStandardMaterial;
    sidedoors: THREE.MeshStandardMaterial;
    Sheet: THREE.MeshStandardMaterial;
    Pillow: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/bed/scene.gltf") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[0, 0.006, 0]}>
        <mesh
          geometry={nodes.Object_4.geometry}
          material={new THREE.MeshStandardMaterial({ color: 0x3aa832 })}
        />
        <mesh
          geometry={nodes.Object_5.geometry}
          material={materials.sidedoors}
        />
      </group>
      <mesh
        geometry={nodes.Object_7.geometry}
        material={materials.Sheet}
        position={[0, 0.461, -0.003]}
      />
      <mesh
        geometry={nodes.Object_9.geometry}
        material={materials.Pillow}
        position={[-0.006, 0.554, -0.756]}
      />
      <mesh
        geometry={nodes.Object_11.geometry}
        material={materials.Pillow}
        position={[0, 0.544, 0.298]}
      />
    </group>
  );
}

useGLTF.preload("models/bed/scene.gltf");
